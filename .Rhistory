for(k in c(1:nrow(selected_data))){
one<-selected_data[k,]
two<-selected_data[(k+1),]
#if(nrow(two)==0){
if(is.na(two$CID)){
data_year[which(data_year$CID==one$CID),"MARKER"]<-5
MARK5<-data_year[which(data_year$MARKER==5),]
if(make.plot==TRUE){
graphics::points(MARK5$XCAL,MARK5$YCAL, pch=15, col="red",cex=1.3)
graphics::points(MARK5$XCAL,MARK5$YCAL, pch=0, col="black",cex=1.3)
}
break
}else{
selected_data[k+1,"DISTANCE"]<-sqrt(((sqrt((one[,"XCAL"]-two[,"XCAL"])^2))^2)+((sqrt((one[,"YCAL"]-two[,"YCAL"])^2))^2))
}
selected_data[1,"DISTANCE"] <-0
}
selected_data[,"TIMES"]<-NA
for(k in c(2:nrow(selected_data))){
#k<-2
one<-selected_data[k,"DISTANCE"]
two<-selected_data[(k+1),"DISTANCE"]
if(length(two)==0){
break
}else{
selected_data[k,"TIMES"]<- two/one
}
}
if(suppressWarnings(max(selected_data[,"TIMES"],na.rm=TRUE))=="-Inf"){
data_year[which(data_year[,"ROW"]==row_code[j]),"ROW"]<-NA
}else{
if(max(selected_data[,"TIMES"],na.rm=TRUE)>profile_cutoff){
data_year[which(data_year[,"ROW"]==row_code[j]),"MARKER"]<-6
MARK6<-data_year[which(data_year$MARKER==6),]
if(make.plot==TRUE){
points(MARK6$XCAL,MARK6$YCAL, pch=3, col="black",cex=0.8)
}
data_year[which(data_year[,"ROW"]==row_code[j]),"ROW"]<-NA
}else{
data_year[which(data_year[,"ROW"]==row_code[j]),"ROW"]<-row_code[j]
}
}
}
backup<-data_year
data_year<-backup
#ROWS WITH LESS THEN 0.60 PERCENTAGE OF THE TOTAL AMOUNT OF CELLS SHOULD BE EXCLUDED-----
row_code<-sort(unique(data_year[,"ROW",]))
if(length(row_code)==0){
data_year[,"POSITION"]<-NA
}else{
cut_off<-max(data_year[,"POSITION"],na.rm=TRUE)*percentage_max_nr_cells
for (r in c(1:length(row_code))){
selected_data<-data_year[which(data_year[,"ROW"]==row_code[r]),]
if(nrow(selected_data)<cut_off){
data_year[which(data_year[,"ROW"]==row_code[r]),"MARKER"]<-7
MARK7<-data_year[which(data_year$MARKER==7),]
if(make.plot==TRUE){
points(MARK7$XCAL,MARK7$YCAL, pch=4, col="black",cex=0.8)
}
data_year[which(data_year[,"ROW"]==row_code[r]),"ROW"]<-NA
}else{
data_year[which(data_year[,"ROW"]==row_code[r]),"ROW"]<-row_code[r]
}
}}
#ALL CELLS AND ROWS ARE RENUMBERED FOR THE FINAL OUTPUT----
data_year[,"POSITION"]<-NA
row_code<-sort(unique(data_year[,"ROW",]))
if(length(row_code)!=0){
for (r in c(1:length(row_code))){
isolated_data<-data_year[which(data_year[,"ROW"]==row_code[r]),]
CID<-isolated_data[order(isolated_data$YCAL),"CID"]
data_year[which(data_year[,"CID"]%in%CID),"ROW"]<-r
data_year[which(data_year[,"CID"]%in%CID),"POSITION"]<-c(1:nrow(isolated_data))
}}
if(make.plot==TRUE){
for(q in c(1:nrow(data_year))){
text(data_year[q,"XCAL"],data_year[q,"YCAL"],data_year[q,"POSITION"],cex=0.5,col="black")}}
if(nrow(data_year[which(data_year[,"MARKER"]==1|data_year[,"MARKER"]==2),])!=0){
data_year[which(data_year[,"MARKER"]==1|data_year[,"MARKER"]==2),"MARKER"]<-1}
if(nrow(data_year[which(data_year[,"MARKER"]==3|data_year[,"MARKER"]==4),])!=0){
data_year[which(data_year[,"MARKER"]==3|data_year[,"MARKER"]==4),"MARKER"]<-2}
if(nrow(data_year[which(data_year[,"MARKER"]==5),])!=0){
data_year[which(data_year[,"MARKER"]==5),"MARKER"]<-3}
if(nrow(data_year[which(data_year[,"MARKER"]==6),])!=0){
data_year[which(data_year[,"MARKER"]==6),"MARKER"]<-4}
if(nrow(data_year[which(data_year[,"MARKER"]==7),])!=0){
data_year[which(data_year[,"MARKER"]==7),"MARKER"]<-5}
if(u==1){output<-data_year}else{output<-rbind(output,data_year)}
}
col_nr<-ncol(output)
weird<-which(colnames(output)=="SQRLENGTH")
output<-output[,c(-weird)]
return(output)
}
write.output<-function(input,location=c("./"),flip=FALSE){
opar <- graphics::par(no.readonly=T)
on.exit(graphics::par(opar))
time_start <- Sys.time()
outlist <- list()
#input<-output
if(missing(flip)){flip<-FALSE}
if(flip!=TRUE&flip!=FALSE)stop('flip need to be TRUE/FALSE')
if(missing(location)){location<-FALSE}
sample<-unique(input[,"ID"])
if(location!=FALSE){
setwd(location)
pdf(file=paste(sample,".pdf",sep=""),height=210/25.4,width=297/25.4,paper="A4r")}
years<-unique(input[,"YEAR"])
for(u in c(1:length(years)) ){
#u<-1
data_year<-input[which(input[,"YEAR"]==years[u]),]
year<-years[u]
if(flip==FALSE){
plot(data_year[,"XCAL"],data_year[,"YCAL"],ylab="Rel. Y-coordinates (micron)",
ylim=c(0-max(data_year[,"YCAL"],na.rm=TRUE)*0.01,max(data_year[,"YCAL"],na.rm=TRUE)),
main=paste(sample," - ",as.character(year)," - Rows: ",max(data_year[,"ROW"],na.rm=TRUE),sep=""),xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2,col="white")}
if(flip==TRUE){
plot(data_year[,"XCAL"],data_year[,"YCAL"],ylab="Rel. Y-coordinates (micron)",
ylim=c(max(data_year[,"YCAL"],na.rm=TRUE),0-max(data_year[,"YCAL"],na.rm=TRUE)*0.01),
main=paste(sample," - ",as.character(year)," - Rows: ",max(data_year[,"ROW"],na.rm=TRUE),sep=""),xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2,col="white")
}
data_year[,"SQRLENGTH"] <-sqrt(data_year[,"CA"])
nrcells<-nrow(data_year)
rows<-max(unique(data_year[,"ROW"])[which(is.na(unique(data_year[,"ROW"]))==FALSE)])
#col_code<-rep(c("orange","blue","red","green","purple"),ceiling(rows/5))
#col_code<-rep(c("#FFA500 ","#FF3300","#C71585","#191970 ","#20B2AA ","#00CC33","#006633"),ceiling(rows/7))
col_code<-rep(c("#FFA500","#FF3300","#C71585","#191970","#20B2AA","#00CC33","#006633"),ceiling(rows/7))
for(i in c(1:nrcells)){
length<-data_year[i,"SQRLENGTH"]/2
x     <-data_year[i,"XCAL"]
y     <-data_year[i,"YCAL"]
x_cor<-c((x-length),(x+length),(x+length),(x-length))
y_cor<-c((y+length),(y+length),(y-length),(y-length))
if(is.na(data_year[i,"ROW"])==TRUE){
polygon(x_cor,y_cor)
}else{
polygon(x_cor,y_cor,col=col_code[data_year[i,"ROW"]])
}
if(is.na(data_year[i,"ROW"])==FALSE){
label_point<-data_year[i,"POSITION"]
text(x,y,label=label_point,col='black',cex=0.5)
}else{
next
}
}
first_cells<-data_year[which(data_year[,"POSITION"]==1),]
for(i in c(1:nrow(first_cells))){
x<-first_cells[i,"XCAL"]
y<-first_cells[i,"YCAL"]
length<-first_cells[i,"SQRLENGTH"]/1.2
label_point<-first_cells[i,"ROW"]
text(x,y-length,label=label_point,col='black',cex=0.8,font=2)
}
a<-which(colnames(data_year)=="SQRLENGTH")
data_year<-data_year[,-a]
name<-paste(sample,"-",as.character(year),sep="")
assign(name,data_year)
}
if(length(years)==1){
output_all_years<-get(paste(sample,"-",as.character(years[1]),sep=""))
}else{
output_all_years<-get(paste(sample,"-",as.character(years[1]),sep=""))
for(t in c(2:(length(years)))){
output_all_years<-rbind(output_all_years,get(paste(sample,"-",as.character(years[t]),sep="")))
}
}
if(location!=FALSE){
write.table(output_all_years,file=paste(sample,"_output.txt",sep=""),row.names=FALSE,sep="\t")
dev.off()}
return(output_all_years)
print(Sys.time() - time_start)
}
input<-is.raptor(example.data(species="LOW_PINUS") , str = FALSE)
is.raptor<-function(data,str=TRUE){
# list.of.packages <- c("mgcv","gam","base")
# new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
# if(length(new.packages)) install.packages(new.packages)
# requireNamespace("gam")
# requireNamespace("mgcv")
# requireNamespace("base")
left = function(string, char){substr(string, 1,char)}
right = function (string, char){substr(string,nchar(string)-(char-1),nchar(string))}
if(ncol(data)==6){
if((is.character(unique(data[,1]))|is.factor(unique(data[,1])))==FALSE)stop('missing ID, value not as character or factor')
if((is.numeric(unique(data[,2]))|is.integer(unique(data[,2])))==FALSE)stop('missing CID, value not as integer')
if(is.numeric(unique(data[,3]))==FALSE)stop('missing YEAR, value not as numeric')
if(is.numeric(unique(data[,4]))==FALSE)stop('missing CA, value not as numeric')
if(is.numeric(unique(data[,5]))==FALSE)stop('missing XCAL, value not as numeric')
if(is.numeric(unique(data[,6]))==FALSE)stop('missing YCAL, value not as numeric')
colnames(data)<-c("ID","CID","YEAR","CA","XCAL","YCAL")
}else{
if(length(which(colnames(data)=="ID"))==0)stop('missing ID')
if(length(which(colnames(data)=="CID"))==0)stop('missing CID')
if(length(which(colnames(data)=="YEAR"))==0)stop('missing YEAR')
if(length(which(colnames(data)=="CA"))==0)stop('missing CA')
if(length(which(colnames(data)=="XCAL"))==0)stop('missing XCAL')
if(length(which(colnames(data)=="YCAL"))==0)stop('missing YCAL')
}
for(c in c(1:length(unique(data[,"YEAR"])))){if(length(which(data[,"YEAR"]==unique(data[c,"YEAR"])))<50)stop(paste("year ",unique(data[c,"YEAR"])," has less than 50 rows",sep=""))}
data<-data.frame(data)
select<-FALSE
if(missing(str)){str<-FALSE}
if(str==TRUE){select<-TRUE}
if(select==TRUE){print(str(data))}
if(length(which(is.na(data[,"YEAR"])==TRUE))!=0)stop('year column contains NA')
return(data)}
is.raptor
example.data(species="LOW_PINUS")
anatomy.data
load("D:/Documents/WSL/07_work_documents/2_results_excel/Chapter 2 - Anatomical analysis/RAPTOR/package_test/Branch/raptor/data/anatomy.data.rda")
anatomy.data
RAPTOR::anatomy.data
example.data<-function(species=FALSE){
if(species!="LOT_PICEA"&species!="SIB_LARIX"&species!="LOW_PINUS"&species!="MOUNT_PINUS")stop('dataset not present')
y<-anatomy.data
#y<-RAPTOR::anatomy.data
y<-y[which(y[,"ID"]==species),]
return(y)}
input<-is.raptor(example.data(species="LOW_PINUS") , str = FALSE)
aligned<-align(input,list=c("v","v",-0.26,"h"),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = FALSE)
aligned<-align(input,list=c("v","v",-0.26,"h"),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.7, sle = 3, ec = 1.75, swl = 0.5, sll = 5, lc = 10,prof.co = 6, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
LOW_PINUS<-write.output(output)
input<-is.raptor(example.data(species="MOUNT_PINUS") , str = FALSE)
aligned<-align(input,list=c("h","h","h",0.03),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.7, sle = 3, ec = 1.75, swl = 0.5, sll = 5, lc = 10,prof.co = 1.7, max.cells = 0.7, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
MOUNT_PINUS<-write.output(output)
input<-is.raptor(example.data(species="SIB_LARIX") , str = FALSE)
aligned<-align(input)
first<-first.cell(aligned, frac.small = 0.5, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.3, sle = 3, ec = 1.5, swl = 0.5, sll = 5, lc = 15,prof.co =4, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
sib_larix<-write.output(output)
corrections<-data.frame(year=c(2010,2010,2010,2009,2009,2009,2009,2008,2008,2008,2008,2008,2008,
2007,2007,2007), row=c(19,15,9,6,11,14,17,5,6,14,17,24,15,2,8,14))
View(corrections)
#2. removing rows
for(i in c(1:nrow(corrections))){
sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]  &sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]<-rep(NA,length(sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]&sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]))
sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]  &sib_larix[,"ROW"]==corrections[i,2] ),"ROW"]<-rep(NA,length(sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]&sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]))}
#3. renumbering
SIB_LARIX<-write.output(sib_larix)
for(i in c(1:length(unique(SIB_LARIX[,"YEAR"])))){
row_id<-unique(SIB_LARIX[which(SIB_LARIX[,"YEAR"]==unique(SIB_LARIX[,"YEAR"])[i]) ,"ROW"],na.rm=TRUE)
row_id<-na.omit(row_id[order(row_id)])
for(j in c(1:length(row_id))){
SIB_LARIX[which(SIB_LARIX[,"YEAR"]==unique(SIB_LARIX[,"YEAR"])[i] & SIB_LARIX[,"ROW"]==row_id[j]),"ROW"]<-j}}
#processsing lotschental picea abies
input<-is.raptor(example.data(species="LOT_PICEA") , str = FALSE)
input<-input[which(input[,"YEAR"]>2006 &input[,"YEAR"]<2011),] #select years 2007-2010
aligned<-align(input,lis=c(0.04,0.04,0,0))
first<-first.cell(aligned, frac.small = 0.5, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.5, sle = 3, ec = 1.75, swl = 0.25, sll = 5, lc = 10,prof.co = 1.5, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
LOT_PICEA<-write.output(output)
sample<-c("LOT_PICEA","SIB_LARIX","MOUNT_PINUS","LOW_PINUS")
for(i in c(1:length(sample))){
input<-get(sample[i])
years<-unique(as.numeric(input$YEAR))
for(j in c(1:length(years))){
select<-input[which(input["YEAR"]==years[j]),]
#prepraring data
lumen<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="l",order=select[,"POSITION"], area=select[,"CA"]))
wall<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="w",order=select[,"POSITION"], area=select[,"CWTALL"]))
gram<-rbind(lumen,wall)
gram<-gram[order(gram[,"gram"]),]
gram[,"gram"]<-as.integer(gram[,"gram"])
#determining mean maximum cells
max.cells<-NA
for(z in c(1:max(gram[,"gram"]))){gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),]
max.cells[z]<-max(gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),"order"])}
mean.cells<-round(mean(max.cells))
#apply standardization
output<-with(gram,standz.all(traq=area, series=gram,wl=lumen.wall, w.char="w", G=mean.cells))
lumen.mean<-colMeans(output$data.stdz[output$which.l,])
wall.mean<-colMeans(output$data.stdz[output$which.w,])
par(mfrow=c(2,1))
par(oma=c(5,0,0,0))
par(mar=c(0,5,1,1))
plot(gram[which(gram[,"lumen.wall"]=="l"),"order"],gram[which(gram[,"lumen.wall"]=="l"),"area"],pch=16,ylab="Lumen area (micron)",xlab="",yaxt="n",xaxt="n",col="grey")
axis(side=1,labels=FALSE)
plot(output,add=TRUE,which="l",type="l")
lines(c(1:mean.cells),lumen.mean,col="black",lwd=2)
legend("topright",c(paste(sample[i],years[j]),"RAPTOR output","Stand. measurement","Mean tracheidogram"),
lty=c(1,NA,1,1),pch=c(16,16,16,16),pt.cex=c(0,2,0,0,0),lwd=c(0,0,1,2),col=c("white","grey","black","black"),
text.font=c(2,1,1,1),bty="n")
axis(side=2,las=2)
plot(gram[which(gram[,"lumen.wall"]=="w"),"order"],gram[which(gram[,"lumen.wall"]=="w"),"area"],pch=16,ylab="Cell wall thickness (micron)",xlab="",yaxt="n",col="grey")
plot(output,add=TRUE,which="w",type="l")
axis(side=2,las=2)
lines(c(1:mean.cells),wall.mean,col="black",lwd=2)
mtext(side=1,"Cell position (#)",padj=4)
#generate output and store data
output<-data.frame(ID=sample[i],YEAR=years[j],POSITION=c(1:mean.cells) ,LUMEN= lumen.mean,WALL= wall.mean)
if(i==1&j==1){final<-output}else{final<-rbind(final,output)}}}
#inter-species comparison on multi-annual tracheidograms
layout(matrix(c(1,3,5,7,2,4,6,8),nc=4, byrow = TRUE))
par(oma=c(5,5,1,1))
par(mar=c(0,1,1,0))
lumen.lim<-2000
wall.lim<-11
colour<-c("darkgreen","darkorange","palegreen","greenyellow")
thickness<-c(1,1,2,2)
type<-c(2,1,2,1)
for(i in c(1:length(sample))){
select<-final[which(final[,"ID"]==sample[i]),]
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(0,lumen.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1,labels=FALSE)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Lumen area (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("2007","2008","2009","2010"),
lty=c(2,1,2,1),lwd=c(1,1,2,2),col=c("black","black","black","black"),bty="n")}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"LUMEN"],col=colour[i],lwd=thickness[j],lty=type[j])}
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(1.5,wall.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Cell wall thickness (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("Picea abies","Larix sibirica","Pinus cembra","Pinus sylvestris"),
lty=c(1,1,1,1),lwd=c(2,2,2,2),col=colour,bty="n",text.font=c(3,3,3,3))}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"WALL"],col=colour[i],lwd=thickness[j],lty=type[j])}}
mtext(side=1,"Cell position (#)",padj=3,outer=TRUE)
require("tgram")
install.packages("tgram")
require("tgram")
#generate tracheidograms for all species
sample<-c("LOT_PICEA","SIB_LARIX","MOUNT_PINUS","LOW_PINUS")
for(i in c(1:length(sample))){
input<-get(sample[i])
years<-unique(as.numeric(input$YEAR))
for(j in c(1:length(years))){
select<-input[which(input["YEAR"]==years[j]),]
#prepraring data
lumen<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="l",order=select[,"POSITION"], area=select[,"CA"]))
wall<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="w",order=select[,"POSITION"], area=select[,"CWTALL"]))
gram<-rbind(lumen,wall)
gram<-gram[order(gram[,"gram"]),]
gram[,"gram"]<-as.integer(gram[,"gram"])
#determining mean maximum cells
max.cells<-NA
for(z in c(1:max(gram[,"gram"]))){gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),]
max.cells[z]<-max(gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),"order"])}
mean.cells<-round(mean(max.cells))
#apply standardization
output<-with(gram,standz.all(traq=area, series=gram,wl=lumen.wall, w.char="w", G=mean.cells))
lumen.mean<-colMeans(output$data.stdz[output$which.l,])
wall.mean<-colMeans(output$data.stdz[output$which.w,])
par(mfrow=c(2,1))
par(oma=c(5,0,0,0))
par(mar=c(0,5,1,1))
plot(gram[which(gram[,"lumen.wall"]=="l"),"order"],gram[which(gram[,"lumen.wall"]=="l"),"area"],pch=16,ylab="Lumen area (micron)",xlab="",yaxt="n",xaxt="n",col="grey")
axis(side=1,labels=FALSE)
plot(output,add=TRUE,which="l",type="l")
lines(c(1:mean.cells),lumen.mean,col="black",lwd=2)
legend("topright",c(paste(sample[i],years[j]),"RAPTOR output","Stand. measurement","Mean tracheidogram"),
lty=c(1,NA,1,1),pch=c(16,16,16,16),pt.cex=c(0,2,0,0,0),lwd=c(0,0,1,2),col=c("white","grey","black","black"),
text.font=c(2,1,1,1),bty="n")
axis(side=2,las=2)
plot(gram[which(gram[,"lumen.wall"]=="w"),"order"],gram[which(gram[,"lumen.wall"]=="w"),"area"],pch=16,ylab="Cell wall thickness (micron)",xlab="",yaxt="n",col="grey")
plot(output,add=TRUE,which="w",type="l")
axis(side=2,las=2)
lines(c(1:mean.cells),wall.mean,col="black",lwd=2)
mtext(side=1,"Cell position (#)",padj=4)
#generate output and store data
output<-data.frame(ID=sample[i],YEAR=years[j],POSITION=c(1:mean.cells) ,LUMEN= lumen.mean,WALL= wall.mean)
if(i==1&j==1){final<-output}else{final<-rbind(final,output)}}}
#inter-species comparison on multi-annual tracheidograms
layout(matrix(c(1,3,5,7,2,4,6,8),nc=4, byrow = TRUE))
par(oma=c(5,5,1,1))
par(mar=c(0,1,1,0))
lumen.lim<-2000
wall.lim<-11
colour<-c("darkgreen","darkorange","palegreen","greenyellow")
thickness<-c(1,1,2,2)
type<-c(2,1,2,1)
for(i in c(1:length(sample))){
select<-final[which(final[,"ID"]==sample[i]),]
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(0,lumen.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1,labels=FALSE)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Lumen area (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("2007","2008","2009","2010"),
lty=c(2,1,2,1),lwd=c(1,1,2,2),col=c("black","black","black","black"),bty="n")}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"LUMEN"],col=colour[i],lwd=thickness[j],lty=type[j])}
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(1.5,wall.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Cell wall thickness (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("Picea abies","Larix sibirica","Pinus cembra","Pinus sylvestris"),
lty=c(1,1,1,1),lwd=c(2,2,2,2),col=colour,bty="n",text.font=c(3,3,3,3))}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"WALL"],col=colour[i],lwd=thickness[j],lty=type[j])}}
mtext(side=1,"Cell position (#)",padj=3,outer=TRUE)
library(RAPTOR)
install.packages("Rtools", repos = "http://cran.r-project.org/bin/windows/Rtools/")
install.packages(roxygen2)
install.packages("roxygen2")
install.Rtools()
require(devtools)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
install.packages("callr")
install.packages("pkgbuild")
install.packages("pkgload")
devtools::find_rtools(T)
library(devtools)
require(devtools)
devtools::find_rtools(T)
devtools::install_github("hadley/devtools")
require(devtools)
install.packages("devtools",dependencies=TRUE)
require(devtools)
devtools::find_rtools(T)
install.packages("roxygen2",dependencies=TRUE)
install.packages("testthat",dependencies=TRUE)
install.packages("knitr",dependencies=TRUE)
install.packages("rstudioapi",dependencies=TRUE)
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
library(RAPTOR)
library(RAPTOR)
?anatomy.data
anatomy.data
example.data
library(RAPTOR)
devtools:test()
require(devtools)
devtools:test()
devtools::test()
devtools::install_github("hadley/testthat")
library(RAPTOR)
library(RAPTOR)
?pos.det
?write.output
?pos.det
library(RAPTOR)
?align
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
?plot_cells
plot_cells()
plot_cells(x)
graphics::par()
graphics::par(opar)
plot.cells(x)
library(RAPTOR)
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
plot.cells
?plot.cells
library(RAPTOR)
plot.cells()
?plot.cells
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
library(RAPTOR)
plot.cells()
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
a<-is.raptor(x)
a
first.cell(x,yrs=2001)
first.cell(x,yrs=2003)
align(a,interact=TRUE)
b<-align(a,interact=TRUE,year=2003)
c<-first.cell(b,yrs=2003)
d<-pos.det(c)
d<-pos.det(c,make.plot=TRUE)
write.output(d,location="D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
library(RAPTOR)
?is.raptor
?plot.cells
?pos.det
?first.cell
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?anatomy.data
?pos.det
?anatomy.data
data<-anatomy.data
View(data)
plot.cell(example.date(species="LOT_PICEA"))
plot.cell(example.data(species="LOT_PICEA"))
plot_cells(example.data(species="LOT_PICEA"))
