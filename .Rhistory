if(species!="LOT_PICEA"&species!="SIB_LARIX"&species!="LOW_PINUS"&species!="MOUNT_PINUS")stop('dataset not present')
y<-anatomy.data
#y<-RAPTOR::anatomy.data
y<-y[which(y[,"ID"]==species),]
return(y)}
input<-is.raptor(example.data(species="LOW_PINUS") , str = FALSE)
aligned<-align(input,list=c("v","v",-0.26,"h"),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = FALSE)
aligned<-align(input,list=c("v","v",-0.26,"h"),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.7, sle = 3, ec = 1.75, swl = 0.5, sll = 5, lc = 10,prof.co = 6, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
LOW_PINUS<-write.output(output)
input<-is.raptor(example.data(species="MOUNT_PINUS") , str = FALSE)
aligned<-align(input,list=c("h","h","h",0.03),make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.7, sle = 3, ec = 1.75, swl = 0.5, sll = 5, lc = 10,prof.co = 1.7, max.cells = 0.7, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
MOUNT_PINUS<-write.output(output)
input<-is.raptor(example.data(species="SIB_LARIX") , str = FALSE)
aligned<-align(input)
first<-first.cell(aligned, frac.small = 0.5, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.3, sle = 3, ec = 1.5, swl = 0.5, sll = 5, lc = 15,prof.co =4, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
sib_larix<-write.output(output)
corrections<-data.frame(year=c(2010,2010,2010,2009,2009,2009,2009,2008,2008,2008,2008,2008,2008,
2007,2007,2007), row=c(19,15,9,6,11,14,17,5,6,14,17,24,15,2,8,14))
View(corrections)
#2. removing rows
for(i in c(1:nrow(corrections))){
sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]  &sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]<-rep(NA,length(sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]&sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]))
sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]  &sib_larix[,"ROW"]==corrections[i,2] ),"ROW"]<-rep(NA,length(sib_larix[which(sib_larix[,"YEAR"]==corrections[i,1]&sib_larix[,"ROW"]==corrections[i,2] ),"POSITION"]))}
#3. renumbering
SIB_LARIX<-write.output(sib_larix)
for(i in c(1:length(unique(SIB_LARIX[,"YEAR"])))){
row_id<-unique(SIB_LARIX[which(SIB_LARIX[,"YEAR"]==unique(SIB_LARIX[,"YEAR"])[i]) ,"ROW"],na.rm=TRUE)
row_id<-na.omit(row_id[order(row_id)])
for(j in c(1:length(row_id))){
SIB_LARIX[which(SIB_LARIX[,"YEAR"]==unique(SIB_LARIX[,"YEAR"])[i] & SIB_LARIX[,"ROW"]==row_id[j]),"ROW"]<-j}}
#processsing lotschental picea abies
input<-is.raptor(example.data(species="LOT_PICEA") , str = FALSE)
input<-input[which(input[,"YEAR"]>2006 &input[,"YEAR"]<2011),] #select years 2007-2010
aligned<-align(input,lis=c(0.04,0.04,0,0))
first<-first.cell(aligned, frac.small = 0.5, yrs = FALSE, make.plot = TRUE)
output<-pos.det(first, swe = 0.5, sle = 3, ec = 1.75, swl = 0.25, sll = 5, lc = 10,prof.co = 1.5, max.cells = 0.5, yrs = FALSE , aligning = FALSE , make.plot = FALSE)
LOT_PICEA<-write.output(output)
sample<-c("LOT_PICEA","SIB_LARIX","MOUNT_PINUS","LOW_PINUS")
for(i in c(1:length(sample))){
input<-get(sample[i])
years<-unique(as.numeric(input$YEAR))
for(j in c(1:length(years))){
select<-input[which(input["YEAR"]==years[j]),]
#prepraring data
lumen<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="l",order=select[,"POSITION"], area=select[,"CA"]))
wall<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="w",order=select[,"POSITION"], area=select[,"CWTALL"]))
gram<-rbind(lumen,wall)
gram<-gram[order(gram[,"gram"]),]
gram[,"gram"]<-as.integer(gram[,"gram"])
#determining mean maximum cells
max.cells<-NA
for(z in c(1:max(gram[,"gram"]))){gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),]
max.cells[z]<-max(gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),"order"])}
mean.cells<-round(mean(max.cells))
#apply standardization
output<-with(gram,standz.all(traq=area, series=gram,wl=lumen.wall, w.char="w", G=mean.cells))
lumen.mean<-colMeans(output$data.stdz[output$which.l,])
wall.mean<-colMeans(output$data.stdz[output$which.w,])
par(mfrow=c(2,1))
par(oma=c(5,0,0,0))
par(mar=c(0,5,1,1))
plot(gram[which(gram[,"lumen.wall"]=="l"),"order"],gram[which(gram[,"lumen.wall"]=="l"),"area"],pch=16,ylab="Lumen area (micron)",xlab="",yaxt="n",xaxt="n",col="grey")
axis(side=1,labels=FALSE)
plot(output,add=TRUE,which="l",type="l")
lines(c(1:mean.cells),lumen.mean,col="black",lwd=2)
legend("topright",c(paste(sample[i],years[j]),"RAPTOR output","Stand. measurement","Mean tracheidogram"),
lty=c(1,NA,1,1),pch=c(16,16,16,16),pt.cex=c(0,2,0,0,0),lwd=c(0,0,1,2),col=c("white","grey","black","black"),
text.font=c(2,1,1,1),bty="n")
axis(side=2,las=2)
plot(gram[which(gram[,"lumen.wall"]=="w"),"order"],gram[which(gram[,"lumen.wall"]=="w"),"area"],pch=16,ylab="Cell wall thickness (micron)",xlab="",yaxt="n",col="grey")
plot(output,add=TRUE,which="w",type="l")
axis(side=2,las=2)
lines(c(1:mean.cells),wall.mean,col="black",lwd=2)
mtext(side=1,"Cell position (#)",padj=4)
#generate output and store data
output<-data.frame(ID=sample[i],YEAR=years[j],POSITION=c(1:mean.cells) ,LUMEN= lumen.mean,WALL= wall.mean)
if(i==1&j==1){final<-output}else{final<-rbind(final,output)}}}
#inter-species comparison on multi-annual tracheidograms
layout(matrix(c(1,3,5,7,2,4,6,8),nc=4, byrow = TRUE))
par(oma=c(5,5,1,1))
par(mar=c(0,1,1,0))
lumen.lim<-2000
wall.lim<-11
colour<-c("darkgreen","darkorange","palegreen","greenyellow")
thickness<-c(1,1,2,2)
type<-c(2,1,2,1)
for(i in c(1:length(sample))){
select<-final[which(final[,"ID"]==sample[i]),]
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(0,lumen.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1,labels=FALSE)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Lumen area (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("2007","2008","2009","2010"),
lty=c(2,1,2,1),lwd=c(1,1,2,2),col=c("black","black","black","black"),bty="n")}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"LUMEN"],col=colour[i],lwd=thickness[j],lty=type[j])}
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(1.5,wall.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Cell wall thickness (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("Picea abies","Larix sibirica","Pinus cembra","Pinus sylvestris"),
lty=c(1,1,1,1),lwd=c(2,2,2,2),col=colour,bty="n",text.font=c(3,3,3,3))}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"WALL"],col=colour[i],lwd=thickness[j],lty=type[j])}}
mtext(side=1,"Cell position (#)",padj=3,outer=TRUE)
require("tgram")
install.packages("tgram")
require("tgram")
#generate tracheidograms for all species
sample<-c("LOT_PICEA","SIB_LARIX","MOUNT_PINUS","LOW_PINUS")
for(i in c(1:length(sample))){
input<-get(sample[i])
years<-unique(as.numeric(input$YEAR))
for(j in c(1:length(years))){
select<-input[which(input["YEAR"]==years[j]),]
#prepraring data
lumen<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="l",order=select[,"POSITION"], area=select[,"CA"]))
wall<-na.omit(data.frame(gram=select[,"ROW"],lumen.wall="w",order=select[,"POSITION"], area=select[,"CWTALL"]))
gram<-rbind(lumen,wall)
gram<-gram[order(gram[,"gram"]),]
gram[,"gram"]<-as.integer(gram[,"gram"])
#determining mean maximum cells
max.cells<-NA
for(z in c(1:max(gram[,"gram"]))){gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),]
max.cells[z]<-max(gram[which(gram[,"gram"]==unique(gram[,"gram"])[z]),"order"])}
mean.cells<-round(mean(max.cells))
#apply standardization
output<-with(gram,standz.all(traq=area, series=gram,wl=lumen.wall, w.char="w", G=mean.cells))
lumen.mean<-colMeans(output$data.stdz[output$which.l,])
wall.mean<-colMeans(output$data.stdz[output$which.w,])
par(mfrow=c(2,1))
par(oma=c(5,0,0,0))
par(mar=c(0,5,1,1))
plot(gram[which(gram[,"lumen.wall"]=="l"),"order"],gram[which(gram[,"lumen.wall"]=="l"),"area"],pch=16,ylab="Lumen area (micron)",xlab="",yaxt="n",xaxt="n",col="grey")
axis(side=1,labels=FALSE)
plot(output,add=TRUE,which="l",type="l")
lines(c(1:mean.cells),lumen.mean,col="black",lwd=2)
legend("topright",c(paste(sample[i],years[j]),"RAPTOR output","Stand. measurement","Mean tracheidogram"),
lty=c(1,NA,1,1),pch=c(16,16,16,16),pt.cex=c(0,2,0,0,0),lwd=c(0,0,1,2),col=c("white","grey","black","black"),
text.font=c(2,1,1,1),bty="n")
axis(side=2,las=2)
plot(gram[which(gram[,"lumen.wall"]=="w"),"order"],gram[which(gram[,"lumen.wall"]=="w"),"area"],pch=16,ylab="Cell wall thickness (micron)",xlab="",yaxt="n",col="grey")
plot(output,add=TRUE,which="w",type="l")
axis(side=2,las=2)
lines(c(1:mean.cells),wall.mean,col="black",lwd=2)
mtext(side=1,"Cell position (#)",padj=4)
#generate output and store data
output<-data.frame(ID=sample[i],YEAR=years[j],POSITION=c(1:mean.cells) ,LUMEN= lumen.mean,WALL= wall.mean)
if(i==1&j==1){final<-output}else{final<-rbind(final,output)}}}
#inter-species comparison on multi-annual tracheidograms
layout(matrix(c(1,3,5,7,2,4,6,8),nc=4, byrow = TRUE))
par(oma=c(5,5,1,1))
par(mar=c(0,1,1,0))
lumen.lim<-2000
wall.lim<-11
colour<-c("darkgreen","darkorange","palegreen","greenyellow")
thickness<-c(1,1,2,2)
type<-c(2,1,2,1)
for(i in c(1:length(sample))){
select<-final[which(final[,"ID"]==sample[i]),]
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(0,lumen.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1,labels=FALSE)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Lumen area (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("2007","2008","2009","2010"),
lty=c(2,1,2,1),lwd=c(1,1,2,2),col=c("black","black","black","black"),bty="n")}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"LUMEN"],col=colour[i],lwd=thickness[j],lty=type[j])}
plot(1,1,type="l",ylab="",col="white",xlab="",yaxt="n",xaxt="n",ylim=c(1.5,wall.lim),xlim=c(1,max(select[,"POSITION"])))
axis(side=1)
axis(side=2,las=2,labels=FALSE)
if(i==4){abline(v=seq(0,100,10),col="grey",lty=3)}else{abline(v=seq(0,100,5),col="grey",lty=3)}
box()
if(i==1){mtext(side=2,"Cell wall thickness (micron)",padj=-4)
axis(side=2,las=2)
legend("topleft",c("Picea abies","Larix sibirica","Pinus cembra","Pinus sylvestris"),
lty=c(1,1,1,1),lwd=c(2,2,2,2),col=colour,bty="n",text.font=c(3,3,3,3))}
for(j in c(1:length(unique(select[,"YEAR"])) )){
lines(select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"POSITION"],select[which(select[,"YEAR"]==unique(select[,"YEAR"])[j]),"WALL"],col=colour[i],lwd=thickness[j],lty=type[j])}}
mtext(side=1,"Cell position (#)",padj=3,outer=TRUE)
library(RAPTOR)
install.packages("Rtools", repos = "http://cran.r-project.org/bin/windows/Rtools/")
install.packages(roxygen2)
install.packages("roxygen2")
install.Rtools()
require(devtools)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
install.packages("callr")
install.packages("pkgbuild")
install.packages("pkgload")
devtools::find_rtools(T)
library(devtools)
require(devtools)
devtools::find_rtools(T)
devtools::install_github("hadley/devtools")
require(devtools)
install.packages("devtools",dependencies=TRUE)
require(devtools)
devtools::find_rtools(T)
install.packages("roxygen2",dependencies=TRUE)
install.packages("testthat",dependencies=TRUE)
install.packages("knitr",dependencies=TRUE)
install.packages("rstudioapi",dependencies=TRUE)
rstudioapi::isAvailable("0.99.149")
devtools::install_github("hadley/devtools")
library(RAPTOR)
library(RAPTOR)
?anatomy.data
anatomy.data
example.data
library(RAPTOR)
devtools:test()
require(devtools)
devtools:test()
devtools::test()
devtools::install_github("hadley/testthat")
library(RAPTOR)
library(RAPTOR)
?pos.det
?write.output
?pos.det
library(RAPTOR)
?align
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
?plot_cells
plot_cells()
plot_cells(x)
graphics::par()
graphics::par(opar)
plot.cells(x)
library(RAPTOR)
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
plot.cells
?plot.cells
library(RAPTOR)
plot.cells()
?plot.cells
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
plot.cells(x)
library(RAPTOR)
plot.cells()
setwd("D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
x<-read.table("A2_514_12A_ex_1-30_Output_Cells.txt",header=TRUE,sep="\t")
a<-is.raptor(x)
a
first.cell(x,yrs=2001)
first.cell(x,yrs=2003)
align(a,interact=TRUE)
b<-align(a,interact=TRUE,year=2003)
c<-first.cell(b,yrs=2003)
d<-pos.det(c)
d<-pos.det(c,make.plot=TRUE)
write.output(d,location="D:\\Documents\\WSL\\07_work_documents\\2_results_excel\\Chapter 2 - Anatomical analysis\\RAPTOR\\Test-Daniel")
library(RAPTOR)
?is.raptor
?plot.cells
?pos.det
?first.cell
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?pos.det
library(RAPTOR)
?anatomy.data
?pos.det
?anatomy.data
data<-anatomy.data
View(data)
plot.cell(example.date(species="LOT_PICEA"))
plot.cell(example.data(species="LOT_PICEA"))
plot_cells(example.data(species="LOT_PICEA"))
library(RAPTOR)
?pos.det()
?first.cell
first.cell()
first.cell
input<-example.data(species="LOT_PICEA")
input<-is.raptor(input, str=TRUE)
plot.cells(input, interact=TRUE)
plot.cells(input, interact=TRUE)
plot_cells(input, interact=TRUE)
plot.cells<-function(input,year=FALSE,interact=FALSE){
opar <- graphics::par(no.readonly=T)
on.exit(graphics::par(opar))
requireNamespace('base')
if(missing(year)){year<-FALSE}
if(missing(interact)){interact<-FALSE}
if(missing(year)){year<-FALSE}
if(missing(interact)){interact<-FALSE}
if(missing(year)==FALSE){ if(is.numeric(year)==FALSE & year!=FALSE | is.numeric(year)==FALSE & is.na(year)==TRUE)stop('year is not as.numeric')}
if(missing(interact)==FALSE){ if((interact==TRUE|interact==FALSE)==FALSE)stop('interact is not TRUE/FALSE')}
if( (is.numeric(year)==FALSE&interact==FALSE)| (missing(year))&missing(interact) | ((year==FALSE)==TRUE&interact==FALSE) | ((year==FALSE)==TRUE&missing(interact)) ){
for(c in c(1:length(unique(input[,"YEAR"])))){
iso<-input[which(input[,"YEAR"]==unique(input[,"YEAR"])[c]),]
if(nrow(iso)==0){next}
graphics::layout(matrix(c(1,2,2,2),ncol = 1, byrow = TRUE))
graphics::par(mar=c(3,5,3,1))
graphics::plot(unique(input[,"YEAR"]),rep(1,length(unique(input[,"YEAR"]))),yaxt="n",xaxt="n",ylab="Years",xlab="",col="white",main=paste("plot.cells: ",unique(input[,"ID"]),sep=""),xlim=c(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5))
axis(side=1,at=unique(input[,"YEAR"]))
abline(v=seq(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5,1))
iso[,"XCAL"]<-iso[,"XCAL"]-min(iso[,"XCAL"],na.rm=TRUE)
iso[,"YCAL"]<-iso[,"YCAL"]-min(iso[,"YCAL"],na.rm=TRUE)
graphics::polygon(c(unique(input[,"YEAR"])[c]-0.5,unique(input[,"YEAR"])[c]+0.5,unique(input[,"YEAR"])[c]+0.5,unique(input[,"YEAR"])[c]-0.5),c(0,0,2,2),col="grey")
for(c in c(1:length(unique(input[,"YEAR"])))){graphics::text(unique(input[,"YEAR"])[c],1,paste(length(which(is.na(input[which(input[,"YEAR"]==unique(input[,"YEAR"])[c]),][,"CA"])==FALSE)),sep=""),font=3,cex=0.8)}
graphics::par(mar=c(5,5,0,1))
graphics::plot(iso[,"XCAL"],iso[,"YCAL"],ylab="Rel. Y-coordinates (micron)",xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2)
nrcells<-nrow(iso)
iso[,"SQRLENGTH"]<-sqrt(iso[,"CA"])
for(i in c(1:nrcells)){
graphics::polygon(c((iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2))
,c((iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2)),col="grey")
graphics::text(iso[i,"XCAL"],iso[i,"YCAL"],iso[i,"CID"],cex=0.8)}}}
if(is.numeric(year)==TRUE&interact==FALSE | is.numeric(year)==TRUE & missing(interact)==TRUE){
if(nrow(input[which(input[,"YEAR"]==year),])==0)stop('year is not present in data.frame')
iso<-input[which(input[,"YEAR"]==year),]
graphics::layout(matrix(c(1,2,2,2),ncol=1, byrow = TRUE))
graphics::par(mar=c(3,5,3,1))
graphics::plot(unique(input[,"YEAR"]),rep(1,length(unique(input[,"YEAR"]))),yaxt="n",xaxt="n",ylab="Years",xlab="",col="white",main=paste("plot.cells: ",unique(input[,"ID"]),sep=""),xlim=c(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5))
axis(side=1,at=unique(input[,"YEAR"]))
abline(v=seq(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5,1))
iso[,"XCAL"]<-iso[,"XCAL"]-min(iso[,"XCAL"],na.rm=TRUE)
iso[,"YCAL"]<-iso[,"YCAL"]-min(iso[,"YCAL"],na.rm=TRUE)
graphics::polygon(c(year-0.5,year+0.5,year+0.5,year-0.5),c(0,0,2,2),col="grey")
for(c in c(1:length(unique(input[,"YEAR"])))){graphics::text(unique(input[,"YEAR"])[c],1,paste(length(which(is.na(input[which(input[,"YEAR"]==unique(input[,"YEAR"])[c]),][,"CA"])==FALSE)),sep=""),font=3,cex=0.8)}
graphics::par(mar=c(5,5,0,1))
graphics::plot(iso[,"XCAL"],iso[,"YCAL"],ylab="Rel. Y-coordinates (micron)",xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2)
nrcells<-nrow(iso)
iso[,"SQRLENGTH"]<-sqrt(iso[,"CA"])
for(i in c(1:nrcells)){
graphics::polygon(c((iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2))
,c((iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2)),col="grey")
graphics::text(iso[i,"XCAL"],iso[i,"YCAL"],iso[i,"CID"],cex=0.8)}}
if(interact==TRUE){
if(is.numeric(year)==FALSE|missing(year)==TRUE){year_select<-unique(input[,"YEAR"])[1]}else{
if(nrow(input[which(input[,"YEAR"]==year),])==0)stop('year is not present in data.frame')
year_select<-year}
iso<-input[which(input[,"YEAR"]==year_select),]
graphics::layout(matrix(c(1,2,2,2),ncol = 1, byrow = TRUE))
graphics::par(mar=c(3,5,3,1))
graphics::plot(unique(input[,"YEAR"]),rep(1,length(unique(input[,"YEAR"]))),yaxt="n",xaxt="n",ylab="Years",xlab="",col="white",main=paste("plot.cells: ",unique(input[,"ID"]),sep=""),xlim=c(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5))
axis(side=1,at=unique(input[,"YEAR"]))
abline(v=seq(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5,1))
iso[,"XCAL"]<-iso[,"XCAL"]-min(iso[,"XCAL"],na.rm=TRUE)
iso[,"YCAL"]<-iso[,"YCAL"]-min(iso[,"YCAL"],na.rm=TRUE)
graphics::polygon(c(year_select-0.5,year_select+0.5,year_select+0.5,year_select-0.5),c(0,0,2,2),col="grey")
for(c in c(1:length(unique(input[,"YEAR"])))){graphics::text(unique(input[,"YEAR"])[c],1,paste(length(which(is.na(input[which(input[,"YEAR"]==unique(input[,"YEAR"])[c]),][,"CA"])==FALSE)),sep=""),font=3,cex=0.8)}
graphics::par(mar=c(5,5,0,1))
graphics::plot(iso[,"XCAL"],iso[,"YCAL"],ylab="Rel. Y-coordinates (micron)",xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2)
nrcells<-nrow(iso)
iso[,"SQRLENGTH"]<-sqrt(iso[,"CA"])
for(i in c(1:nrcells)){
graphics::polygon(c((iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2))
,c((iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2)),col="grey")
graphics::text(iso[i,"XCAL"],iso[i,"YCAL"],iso[i,"CID"],cex=0.8)}
repeat{
repeat{
option<-readline("SELECT - next [n] / previous [p] / specific year [yyyy] / end [x] : ")
list<-unique(input[,"YEAR"])
if( option != "n" & option != "p" & option != "x" & length(list[which(list==option)])== 0 )print('Option is not available')
if( option != "n" & option != "p" & option != "x" & length(list[which(list==option)])== 0 ){next}
if(option == "n"){
if( is.na(list[which(list==year_select)+1])==TRUE )print('Out of bounds')
if( is.na(list[which(list==year_select)+1])==TRUE ){next}
year_select<-list[which(list==year_select)+1]
print(year_select)
break}
if(option == "p"){
if( identical(list[which(list==year_select)-1],integer(0))==TRUE )print('Out of bounds')
if( identical(list[which(list==year_select)-1],integer(0))==TRUE ){next}
year_select<-list[which(list==year_select)-1]
print(year_select)
break
}
if(option=="x"){
year_select<-"x"
print("End plot.cells")
break}
if(length(list[which(list==option)])!=0){
year_select<-option
print(year_select)
break}
}
if(year_select=="x"){break}
year_select<-as.numeric(year_select)
iso<-input[which(input[,"YEAR"]==year_select),]
graphics::layout(matrix(c(1,2,2,2),ncol=1, byrow = TRUE))
graphics::par(mar=c(3,5,3,1))
graphics::plot(unique(input[,"YEAR"]),rep(1,length(unique(input[,"YEAR"]))),yaxt="n",xaxt="n",ylab="Years",xlab="",col="white",main=paste("plot.cells: ",unique(input[,"ID"]),sep=""),xlim=c(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5))
axis(side=1,at=unique(input[,"YEAR"]))
abline(v=seq(min(unique(input[,"YEAR"]),na.rm=TRUE)-0.5,max(unique(input[,"YEAR"]),na.rm=TRUE)+0.5,1))
iso[,"XCAL"]<-iso[,"XCAL"]-min(iso[,"XCAL"],na.rm=TRUE)
iso[,"YCAL"]<-iso[,"YCAL"]-min(iso[,"YCAL"],na.rm=TRUE)
graphics::polygon(c(year_select-0.5,year_select+0.5,year_select+0.5,year_select-0.5),c(0,0,2,2),col="grey")
for(c in c(1:length(unique(input[,"YEAR"])))){graphics::text(unique(input[,"YEAR"])[c],1,paste(length(which(is.na(input[which(input[,"YEAR"]==unique(input[,"YEAR"])[c]),][,"CA"])==FALSE)),sep=""),font=3,cex=0.8)}
graphics::par(mar=c(5,5,0,1))
graphics::plot(iso[,"XCAL"],iso[,"YCAL"],ylab="Rel. Y-coordinates (micron)",xlab="Rel. X-coordinates (micron)",pch=16,cex=0.2)
nrcells<-nrow(iso)
iso[,"SQRLENGTH"]<-sqrt(iso[,"CA"])
for(i in c(1:nrcells)){
graphics::polygon(c((iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"XCAL"]-iso[i,"SQRLENGTH"]/2))
,c((iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]+iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2),(iso[i,"YCAL"]-iso[i,"SQRLENGTH"]/2)),col="grey")
graphics::text(iso[i,"XCAL"],iso[i,"YCAL"],iso[i,"CID"],cex=0.8)}
}}
}
input<-example.data(species="LOT_PICEA")
input<-is.raptor(input, str=TRUE)
plot_cells(input, interact=TRUE)
input<-example.data(species="LOT_PICEA")
input<-is.raptor(input, str=TRUE)
plot.cells(input, interact=TRUE)
library(RAPTOR)
?graph.cells
input<-example.data(species="LOT_PICEA")
input<-is.raptor(input, str=TRUE)
graph.cells(input, interact=TRUE)
library(RAPTOR)
system("R CMD Rd2pdf MyRpackage")
system("R CMD Rd2pdf RAPTOR")
system.file("extradoc/Introduction.pdf",package="RAPTOR")
citation("tgram")
library(RAPTOR)
system("R CMD Rd2pdf .")
install.packages("pdflatex")
require(pdflatex)
Sys.getenv("PATH")
system("echo $PATH")
install.packages("pdflatex")
?align
install.packages('devtools')
devtools::load_all()
??RAPTOR
anatomy.data
?RAPTOR
??RAPTOR
?anatomy.data
?RAPTOR
??RAPTOR
c(
person('Richard L. Peters', role =  c('aut', 'cre', 'cph'), email = 'richardlouispeters3@hotmail.com'),
person('Alexander Hurley', role =  c('cre, ctr')),
person('Daniel Balanzategui', role =  c('ctr')),
person('Georg von Arx', role = 'ctr'),
person('Angela Luisa Prendin', role = 'ctr'),
person('Henri E. Cuny', role = 'ctr'),
person('Jesper Bjoerklund', role = 'ctr'),
person('David C. Frank', role = 'ctr'),
person('Patrick Fonti', role = c('ths','ctr','fnd')))
c(
person('Richard L. Peters', role =  c('aut', 'cre', 'cph'), email = 'richardlouispeters3@hotmail.com'),
person('Alexander Hurley', role =  c('cre')),
person('Daniel Balanzategui', role =  c('ctr')),
person('Georg von Arx', role = 'ctr'),
person('Angela Luisa Prendin', role = 'ctr'),
person('Henri E. Cuny', role = 'ctr'),
person('Jesper Bjoerklund', role = 'ctr'),
person('David C. Frank', role = 'ctr'),
person('Patrick Fonti', role = c('ths','ctr','fnd')))
?is.raptor
devtools::check()
install.packages('codetools')
devtools::check()
library(RAPTOR)
anatomy.data
library(RAPTOR)
?align()
?pos.det()
input<-is.raptor(example.data(species="MOUNT_PINUS"), str = FALSE)
aligned<-align(input, list=c("h", "h", "h", 0.03), make.plot = FALSE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = FALSE)
aligned<-align(input, list=c("h", "h", "h", 0.03), make.plot = TRUE)
first<-first.cell(aligned, frac.small = 0.2, yrs = FALSE, make.plot = TRUE)
sessionInfo()
devtools::use_travis()
install.packages('devtools')
library(devtools)
devtools::use_travis()
devtools::revdep_check()
load("./revdep/check.rds")
getwd()
load("R/revdep/check.rds")
load("revdep/check.rds")
list.dirs()
session_info()
devtools::build()
